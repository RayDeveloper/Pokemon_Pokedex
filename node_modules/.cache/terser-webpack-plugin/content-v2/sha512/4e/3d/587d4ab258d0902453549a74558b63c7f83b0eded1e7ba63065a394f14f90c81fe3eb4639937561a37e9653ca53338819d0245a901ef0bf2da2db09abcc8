{"map":"{\"version\":3,\"sources\":[\"C:/Users/ray_5/OneDrive/Documents/Year 2/Semester 2/COMP 6300- Advanced Internet Technology/Assignment 3/Pokemon_Monsters_813117991/src/components/card/card.component.jsx\",\"C:/Users/ray_5/OneDrive/Documents/Year 2/Semester 2/COMP 6300- Advanced Internet Technology/Assignment 3/Pokemon_Monsters_813117991/src/components/card-list/card-list.component.jsx\",\"C:/Users/ray_5/OneDrive/Documents/Year 2/Semester 2/COMP 6300- Advanced Internet Technology/Assignment 3/Pokemon_Monsters_813117991/src/components/search-box/search-box.component.jsx\",\"C:/Users/ray_5/OneDrive/Documents/Year 2/Semester 2/COMP 6300- Advanced Internet Technology/Assignment 3/Pokemon_Monsters_813117991/src/App.js\",\"C:/Users/ray_5/OneDrive/Documents/Year 2/Semester 2/COMP 6300- Advanced Internet Technology/Assignment 3/Pokemon_Monsters_813117991/src/serviceWorker.js\",\"C:/Users/ray_5/OneDrive/Documents/Year 2/Semester 2/COMP 6300- Advanced Internet Technology/Assignment 3/Pokemon_Monsters_813117991/src/index.js\"],\"names\":[\"Card\",\"props\",\"react_default\",\"a\",\"createElement\",\"className\",\"alt\",\"src\",\"concat\",\"pokemon\",\"name\",\"toUpperCase\",\"slice\",\"url\",\"CardList\",\"pokemonBalls\",\"map\",\"card_component_Card\",\"key\",\"SearchBox\",\"_ref\",\"placeholder\",\"handleChange\",\"type\",\"onChange\",\"App\",\"_this\",\"Object\",\"classCallCheck\",\"this\",\"possibleConstructorReturn\",\"getPrototypeOf\",\"call\",\"state\",\"pokedexEntry\",\"_this2\",\"fetch\",\"then\",\"response\",\"json\",\"setState\",\"results\",\"_this3\",\"_this$state\",\"filteredPokemons\",\"filter\",\"toLowerCase\",\"includes\",\"search_box_component_SearchBox\",\"e\",\"target\",\"value\",\"card_list_component_CardList\",\"Component\",\"Boolean\",\"window\",\"location\",\"hostname\",\"match\",\"ReactDOM\",\"render\",\"StrictMode\",\"src_App_0\",\"document\",\"getElementById\",\"navigator\",\"serviceWorker\",\"ready\",\"registration\",\"unregister\",\"catch\",\"error\",\"console\",\"message\"],\"mappings\":\"mTAIaA,SAAO,SAACC,GAAD,OAChBC,EAAAC,EAAAC,cAAA,MAAA,CAAKC,UAAU,kBACXH,EAAAC,EAAAC,cAAA,MAAA,CAAKE,IAAI,UAAUC,IAAG,2CAAAC,OAA6CP,EAAMQ,QAAQC,KAA3D,UACtBR,EAAAC,EAAAC,cAAA,KAAA,KAAKH,EAAMQ,QAAQC,KAAK,GAAGC,cAAcV,EAAMQ,QAAQC,KAAKE,MAAM,IAClEV,EAAAC,EAAAC,cAAA,IAAA,KAAIH,EAAMQ,QAAQI,QCAbC,SAAW,SAAAb,GAAK,OAGzBC,EAAAC,EAAAC,cAAA,MAAA,CAAKC,UAAU,aACVJ,EAAMc,aAAaC,IAAI,SAAAP,GAAO,OAE/BP,EAAAC,EAAAC,cAACa,EAAD,CAAMC,IAAKT,EAAQC,KAAMD,QAASA,SCX7BU,SAAY,SAAAC,GAAA,IAAEC,EAAFD,EAAEC,YAAYC,EAAdF,EAAcE,aAAd,OACrBpB,EAAAC,EAAAC,cAAA,QAAA,CACQC,UAAY,SACZkB,KAAK,SACLF,YAAaA,EACbG,SAAUF,MC0CPG,qBApCb,SAAAA,IAAa,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,IACXC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,QAEKI,MAAO,CACVlB,aAAa,GACbmB,aAAc,IALLR,mFAUM,IAAAS,EAAAN,KAEjBO,MAAM,+CACLC,KAAK,SAAAC,GAAQ,OAAEA,EAASC,SACxBF,KAAK,SAAA3B,GAAI,OAAIyB,EAAKK,SAAS,CAACzB,aAAaL,EAAK+B,6CAKzC,IAAAC,EAAAb,KAAAc,EACgCd,KAAKI,MAAnClB,EADF4B,EACE5B,aAAcmB,EADhBS,EACgBT,aAChBU,EAAoB7B,EAAa8B,OAAO,SAAApC,GAAO,OAAKA,EAAQC,KAAKoC,cAAcC,SAASb,EAAaY,iBAC3G,OACE5C,EAAAC,EAAAC,cAAA,MAAA,CAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAC4C,EAAD,CACI3B,YAAY,uBACZC,aAAc,SAAA2B,GAAC,OAAIP,EAAKF,SAAS,CAAEN,aAAce,EAAEC,OAAOC,WAE9DjD,EAAAC,EAAAC,cAACgD,EAAD,CAAUrC,aAAc6B,YAhCdS,EAAAA,YCEEC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,EAAAA,EAASC,OACP1D,EAAAC,EAAAC,cAACF,EAAAC,EAAM0D,WAAP,KACE3D,EAAAC,EAAAC,cAAC0D,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB9B,KAAK,SAAA+B,GACJA,EAAaC,eAEdC,MAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME\",\"sourcesContent\":[\"import React from 'react';\\nimport './card.styles.css';\\n\\n\\nexport const Card = (props) => (\\n    <div className='card-container'>\\n        <img alt=\\\"pokemon\\\" src={`https://img.pokemondb.net/artwork/large/${props.pokemon.name}.jpg`} />\\n        <h2>{props.pokemon.name[0].toUpperCase()+props.pokemon.name.slice(1)}</h2>\\n        <p>{props.pokemon.url}</p>\\t\\t\\n    </div>\\n)\",\"import React from 'react';\\n\\nimport { Card } from '../card/card.component';\\n\\nimport './card-list.styles.css';\\n\\n\\n\\nexport const CardList = props => (\\n\\t\\n\\t\\n    <div className='card-list'>\\n        {props.pokemonBalls.map(pokemon =>(\\n\\n        <Card key={pokemon.name} pokemon={pokemon}></Card>\\n        ))}\\n        \\n\\n    </div>\\n);\\n\",\"import React from 'react';\\nimport './search-box.styles.css';\\n\\nexport const SearchBox = ({placeholder,handleChange}) => (\\n    <input \\n            className = 'search'\\n            type='search' \\n            placeholder={placeholder} \\n            onChange={handleChange}\\n  />\\n)\",\"import React, {Component} from 'react';\\nimport {CardList} from './components/card-list/card-list.component';\\nimport {SearchBox} from './components/search-box/search-box.component';\\nimport './App.css';\\n\\n\\n\\n\\n\\t\\n\\nclass App extends Component {\\n\\t\\n\\n\\t\\n  constructor(){\\n    super();\\n    \\n    this.state= {\\n      pokemonBalls:[],//array to hold the pokemon,\\n      pokedexEntry: ''//holds a text entry from the user\\n      \\n    };\\n\\n  }\\n  componentDidMount(){\\n\\t\\t\\t\\t\\n    fetch('https://pokeapi.co/api/v2/pokemon?limit=500')//gets the first 500 pokemon although there are many more\\n    .then(response=>response.json()) \\n    .then(name => this.setState({pokemonBalls:name.results}))\\n  \\n   }//end componentDidMount\\n  \\n      \\n  render(){\\n    const { pokemonBalls, pokedexEntry} = this.state;\\n    const filteredPokemons  = pokemonBalls.filter(pokemon  => pokemon.name.toLowerCase().includes(pokedexEntry.toLowerCase()));\\n    return(\\n      <div className=\\\"App\\\">\\n        <SearchBox\\n            placeholder='Enter a pokemon name' \\n            handleChange={e => this.setState({ pokedexEntry: e.target.value })}\\n            />\\n        <CardList pokemonBalls={filteredPokemons}/>\\n    </div>\\n  \\n    );//end return\\n  }//end render\\n  \\n}\\n\\nexport default App;\\n\\n\",\"// This optional code is used to register a service worker.\\n// register() is not called by default.\\n\\n// This lets the app load faster on subsequent visits in production, and gives\\n// it offline capabilities. However, it also means that developers (and users)\\n// will only see deployed updates on subsequent visits to a page, after all the\\n// existing tabs open on the page have been closed, since previously cached\\n// resources are updated in the background.\\n\\n// To learn more about the benefits of this model and instructions on how to\\n// opt-in, read https://bit.ly/CRA-PWA\\n\\nconst isLocalhost = Boolean(\\n  window.location.hostname === 'localhost' ||\\n    // [::1] is the IPv6 localhost address.\\n    window.location.hostname === '[::1]' ||\\n    // 127.0.0.0/8 are considered localhost for IPv4.\\n    window.location.hostname.match(\\n      /^127(?:\\\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\\n    )\\n);\\n\\nexport function register(config) {\\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\\n    // The URL constructor is available in all browsers that support SW.\\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\\n    if (publicUrl.origin !== window.location.origin) {\\n      // Our service worker won't work if PUBLIC_URL is on a different origin\\n      // from what our page is served on. This might happen if a CDN is used to\\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\\n      return;\\n    }\\n\\n    window.addEventListener('load', () => {\\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\\n\\n      if (isLocalhost) {\\n        // This is running on localhost. Let's check if a service worker still exists or not.\\n        checkValidServiceWorker(swUrl, config);\\n\\n        // Add some additional logging to localhost, pointing developers to the\\n        // service worker/PWA documentation.\\n        navigator.serviceWorker.ready.then(() => {\\n          console.log(\\n            'This web app is being served cache-first by a service ' +\\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\\n          );\\n        });\\n      } else {\\n        // Is not localhost. Just register service worker\\n        registerValidSW(swUrl, config);\\n      }\\n    });\\n  }\\n}\\n\\nfunction registerValidSW(swUrl, config) {\\n  navigator.serviceWorker\\n    .register(swUrl)\\n    .then(registration => {\\n      registration.onupdatefound = () => {\\n        const installingWorker = registration.installing;\\n        if (installingWorker == null) {\\n          return;\\n        }\\n        installingWorker.onstatechange = () => {\\n          if (installingWorker.state === 'installed') {\\n            if (navigator.serviceWorker.controller) {\\n              // At this point, the updated precached content has been fetched,\\n              // but the previous service worker will still serve the older\\n              // content until all client tabs are closed.\\n              console.log(\\n                'New content is available and will be used when all ' +\\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\\n              );\\n\\n              // Execute callback\\n              if (config && config.onUpdate) {\\n                config.onUpdate(registration);\\n              }\\n            } else {\\n              // At this point, everything has been precached.\\n              // It's the perfect time to display a\\n              // \\\"Content is cached for offline use.\\\" message.\\n              console.log('Content is cached for offline use.');\\n\\n              // Execute callback\\n              if (config && config.onSuccess) {\\n                config.onSuccess(registration);\\n              }\\n            }\\n          }\\n        };\\n      };\\n    })\\n    .catch(error => {\\n      console.error('Error during service worker registration:', error);\\n    });\\n}\\n\\nfunction checkValidServiceWorker(swUrl, config) {\\n  // Check if the service worker can be found. If it can't reload the page.\\n  fetch(swUrl, {\\n    headers: { 'Service-Worker': 'script' },\\n  })\\n    .then(response => {\\n      // Ensure service worker exists, and that we really are getting a JS file.\\n      const contentType = response.headers.get('content-type');\\n      if (\\n        response.status === 404 ||\\n        (contentType != null && contentType.indexOf('javascript') === -1)\\n      ) {\\n        // No service worker found. Probably a different app. Reload the page.\\n        navigator.serviceWorker.ready.then(registration => {\\n          registration.unregister().then(() => {\\n            window.location.reload();\\n          });\\n        });\\n      } else {\\n        // Service worker found. Proceed as normal.\\n        registerValidSW(swUrl, config);\\n      }\\n    })\\n    .catch(() => {\\n      console.log(\\n        'No internet connection found. App is running in offline mode.'\\n      );\\n    });\\n}\\n\\nexport function unregister() {\\n  if ('serviceWorker' in navigator) {\\n    navigator.serviceWorker.ready\\n      .then(registration => {\\n        registration.unregister();\\n      })\\n      .catch(error => {\\n        console.error(error.message);\\n      });\\n  }\\n}\\n\",\"import React from 'react';\\nimport ReactDOM from 'react-dom';\\nimport './index.css';\\nimport App from './App';\\nimport * as serviceWorker from './serviceWorker';\\n\\nReactDOM.render(\\n  <React.StrictMode>\\n    <App />\\n  </React.StrictMode>,\\n  document.getElementById('root')\\n);\\n\\n// If you want your app to work offline and load faster, you can change\\n// unregister() to register() below. Note this comes with some pitfalls.\\n// Learn more about service workers: https://bit.ly/CRA-PWA\\nserviceWorker.unregister();\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],[,,,,,,,,function(e,n,t){e.exports=t(18)},,,,,function(e,n,t){},function(e,n,t){},function(e,n,t){},function(e,n,t){},function(e,n,t){},function(e,n,t){\"use strict\";t.r(n);var a=t(0),o=t.n(a),r=t(2),c=t.n(r),l=(t(13),t(3)),i=t(4),s=t(6),m=t(5),u=t(7),p=(t(14),function(e){return o.a.createElement(\"div\",{className:\"card-container\"},o.a.createElement(\"img\",{alt:\"pokemon\",src:\"https://img.pokemondb.net/artwork/large/\".concat(e.pokemon.name,\".jpg\")}),o.a.createElement(\"h2\",null,e.pokemon.name[0].toUpperCase()+e.pokemon.name.slice(1)),o.a.createElement(\"p\",null,e.pokemon.url))}),h=(t(15),function(e){return o.a.createElement(\"div\",{className:\"card-list\"},e.pokemonBalls.map(function(e){return o.a.createElement(p,{key:e.name,pokemon:e})}))}),d=(t(16),function(e){var n=e.placeholder,t=e.handleChange;return o.a.createElement(\"input\",{className:\"search\",type:\"search\",placeholder:n,onChange:t})}),k=(t(17),function(e){function n(){var e;return Object(l.a)(this,n),(e=Object(s.a)(this,Object(m.a)(n).call(this))).state={pokemonBalls:[],pokedexEntry:\"\"},e}return Object(u.a)(n,e),Object(i.a)(n,[{key:\"componentDidMount\",value:function(){var e=this;fetch(\"https://pokeapi.co/api/v2/pokemon?limit=500\").then(function(e){return e.json()}).then(function(n){return e.setState({pokemonBalls:n.results})})}},{key:\"render\",value:function(){var e=this,n=this.state,t=n.pokemonBalls,a=n.pokedexEntry,r=t.filter(function(e){return e.name.toLowerCase().includes(a.toLowerCase())});return o.a.createElement(\"div\",{className:\"App\"},o.a.createElement(d,{placeholder:\"Enter a pokemon name\",handleChange:function(n){return e.setState({pokedexEntry:n.target.value})}}),o.a.createElement(h,{pokemonBalls:r}))}}]),n}(a.Component));Boolean(\"localhost\"===window.location.hostname||\"[::1]\"===window.location.hostname||window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));c.a.render(o.a.createElement(o.a.StrictMode,null,o.a.createElement(k,null)),document.getElementById(\"root\")),\"serviceWorker\"in navigator&&navigator.serviceWorker.ready.then(function(e){e.unregister()}).catch(function(e){console.error(e.message)})}],[[8,1,2]]]);","extractedComments":[]}